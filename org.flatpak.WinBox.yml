app-id: org.flatpak.WinBox
base: org.winehq.Wine
base-version: stable-23.08
runtime: org.freedesktop.Platform
runtime-version: '23.08'
sdk: org.freedesktop.Sdk
command: winbox.sh

finish-args:
  - --allow=multiarch
  - --env=PATH=/app/bin:/usr/bin
  - --env=WINEDLLPATH=/app/dlls/lib32:/app/dlls/lib
  - --env=WINEPREFIX=/var/data
  # To access user files
  - --filesystem=host
  - --filesystem=xdg-run/gvfsd
  - --share=ipc
  - --share=network
  - --socket=wayland
  - --socket=x11

inherit-extensions:
  - org.freedesktop.Platform.Compat.i386
  - org.freedesktop.Platform.ffmpeg_full.i386
  - org.freedesktop.Platform.ffmpeg-full
  - org.freedesktop.Platform.GL32
  - org.freedesktop.Platform.VAAPI.Intel.i386
  - org.winehq.Wine.DLLs
  - org.winehq.Wine.gecko
  - org.winehq.Wine.mono

modules:
  - name: WinBox
    only-arches:
      - x86_64
    buildsystem: simple
    build-options:
      strip: false
    build-commands:
      - install -Dm755 winbox-installer.sh ${FLATPAK_DEST}/bin/winbox-installer.sh
      - install -Dm755 winbox-fonts.sh ${FLATPAK_DEST}/bin/winbox-fonts.sh
      - install -Dm755 winbox.sh ${FLATPAK_DEST}/bin/winbox.sh
      - install -Dm644 ${FLATPAK_ID}.metainfo.xml ${FLATPAK_DEST}/share/metainfo/
      - install -Dm644 ${FLATPAK_ID}.desktop ${FLATPAK_DEST}/share/applications/
      - |
        # Filesystem is R/O during flatpak execution
        rm ${FLATPAK_DEST}/share/wine/fonts/tahoma.ttf \
          ${FLATPAK_DEST}/share/wine/fonts/tahomabd.ttf
      - |
        find . -name \*.ttf -o -name \*.ttc | while read -r file; do
          install -Dm644 ${file} -t ${FLATPAK_DEST}/share/wine/fonts/
        done
      - |
        for size in 64 128 256 512
        do
          install -d ${FLATPAK_DEST}/share/icons/hicolor/${size}x${size}/apps
          gdk-pixbuf-thumbnailer -s ${size} default.png \
            ${FLATPAK_DEST}/share/icons/hicolor/${size}x${size}/apps/${FLATPAK_ID}.png
        done
    sources:
      - type: script
        dest-filename: winbox-installer.sh
        commands:
          - |
            #!/bin/sh
            CHOICE=$(zenity --list \
            --hide-header \
            --hide-column=3 \
            --modal \
            --ok-label="Next >" \
            --print-column=3 \
            --radiolist \
            --text="By downloading any files from mikrotik.com, you agree to the following:\n\t<a href=\"https://mikrotik.com/downloadterms.html\">Export Eligibility Requirements and END USER LICENSE</a>" \
            --title="Installing WinBox" \
            --width=480 \
            --column="Select" \
            --column="Text" \
            --column="VAR" \
            TRUE "I agree with the above terms and conditions" "TRUE" \
            FALSE "I do not accept the agreement" "FALSE")

            # If dialog is cancelled insure default of FALSE is enforced
            # shellcheck disable=SC2181
            [ $? -ne 0 ] && CHOICE="FALSE"
            if [ "${CHOICE}" != "TRUE" ]; then
              exit 1
            fi

            PERCENT=0
            (echo "# Downloading WinBox64"
            echo "${PERCENT}"; sleep 1
            mkdir -p "${WINEPREFIX}/drive_c/Program Files/WinBox"
            curl --location \
              --output "${WINEPREFIX}/drive_c/Program Files/WinBox/winbox64.exe" \
              https://mt.lv/winbox64
            PERCENT=30

            echo "# Downloading Icons"
            echo "${PERCENT}"; sleep 1
            curl --location \
              --output /tmp/MT_Symbol_Black.svg \
              https://mikrotik.com/logo/library/logo/SVG/MT_Symbol_Black.svg

            for size in 64 128 256 512
            do
              install -d ~/.local/share/icons/hicolor/${size}x${size}/apps
              rsvg-convert --width ${size} \
                --height ${size} \
                --keep-aspect-ratio \
                --format png \
                --output ~/.local/share/icons/hicolor/${size}x${size}/apps/"${FLATPAK_ID}".png \
                /tmp/MT_Symbol_Black.svg
            done
            PERCENT=40

            echo "# Setting-up wine prefix"
            echo "${PERCENT}"; sleep 1
            wineboot
            PERCENT=70

            echo "# Checking Font(s)"
            echo "${PERCENT}"; sleep 1
            # shellcheck disable=SC3046,SC1091
            source /app/bin/winbox-fonts.sh

            echo "# Set Windows Version to win10"
            update_progress "=95"; sleep 1
            wine64 REG ADD 'HKEY_CURRENT_USER\Software\Wine' /v Version /d win10 /f

            echo "# Installer finished" ) | zenity --progress --title="Installing Application" --width=480
      - type: script
        dest-filename: winbox-fonts.sh
        commands:
          - |
            #!/bin/sh
            PARENT=$(basename "$0")

            update_progress() {
              if [ "${PARENT}" = "winbox-installer.sh" ]; then
                _EXPR=$(awk -v current="${PERCENT}" -v expr="$*" '
                  BEGIN {
                    split(expr, opr, /[0123456789]*/, opd)
                    switch (opr[1]) {
                    case /+/:
                      if (strtonum(opd[1]))
                        printf("%s + %s\n", current, opd[1])
                      break
                    case /=/:
                      if (strtonum(opd[1])) {
                        if (opd[1] > current) {
                          printf("%s\n", opd[1])
                        } else {
                          printf("%s\n", current)
                        }
                      }
                      break
                    default:
                       printf("%s\n", current)
                    }

                    exit
                  }'
                )

                # shellcheck disable=SC2003,SC2086
                PERCENT=$(expr ${_EXPR})
                echo "${PERCENT}" && sleep 1
              fi
            }

            EXT_FONTS=$(wine64 reg query 'HKEY_CURRENT_USER\Software\Wine\Fonts\External Fonts' | tr -d '\r')
            # shellcheck disable=SC2046,SC3011
            eval $(awk '{
              split($0, a, /[[:space:]]*REG_SZ[[:space:]]*/)
              file = gensub(/\\/, "/", "g", substr(a[2], match(a[2], /:/) + 1))
              switch (a[1]) {
              case /Carlito Regular \(TrueType\)/:
                printf("CARLITO=\"%s\"\n", file)
                break
              case /DejaVu Sans \(TrueType\)/:
                printf("DEJAVUE=\"%s\"\n", file)
                break
              case /FreeSans \(TrueType\)/:
                printf("FREESANS=\"%s\"\n", file)
                break
              case /Liberation Sans \(TrueType\)/:
                printf("LIBERATION=\"%s\"\n", file)
                break
              case /Segoe UI \(TrueType\)/:
                printf("SEGOE=\"%s\"\n", file)
                break 
              case /Tahoma \(TrueType\)/:
                printf("TAHOMA=\"%s\"\n", file)
              }
            }' <<<"${EXT_FONTS}")

            # Winbox seems to exclusively use Tahoma
            update_progress "+5"
            if [ -n "${TAHOMA}" ]; then
              foundry=$(fc-query --format='%{[]foundry{%{foundry}\n}}' "${TAHOMA}")
              if [ "${foundry}" = "Wine" ]; then
                zenity --question \
                  --default-cancel \
                  --text="The installed Tahoma font may cause issues with text format.  Choose a replacement ?" \
                  --width=480

                # shellcheck disable=SC2181
                if [ $? -eq 0 ]; then
                  echo "# Removing Tahoma font file"
                  update_progress "+5"
                  wine64 CMD /c DEL "${TAHOMA}"
                  unset TAHOMA
                fi
              fi
            fi

            update_progress "+5"
            # shellcheck disable=SC3011
            FONTS=$(awk -v tahoma="${TAHOMA}" '
              function ltrim(s) { sub(/^[ \t\r\n]+/, "", s); return s }
              function rtrim(s) { sub(/[ \t\r\n]+$/, "", s); return s }
              function trim(s)  { return rtrim(ltrim(s)); }
              {
                split($0, a, /REG_SZ/)
                font = trim(a[1])
                switch (a[1]) {
                case /Carlito Regular \(TrueType\)/:
                  printf("FALSE\n%s\nCarlito Regular\n", font)
                  break
                case /DejaVu Sans \(TrueType\)/:
                  printf("FALSE\n%s\nDejaVu Sans\n", font)
                  break
                case /FreeSans \(TrueType\)/:
                  printf("FALSE\n%s\nFreeSans\n", font)
                  break
                case /Liberation Sans \(TrueType\)/:
                  printf("FALSE\n%s\nLiberation Sans\n", font)
                  break
                case /Segoe UI \(TrueType\)/:
                  printf("FALSE\n%s\nSegoe UI\n", font)
                  break
                case /Tahoma \(TrueType\)/:
                  printf("FALSE\n%s\nTahoma\n", font)
                }
              }' <<<"${EXT_FONTS}")

            update_progress "+5"
            # shellcheck disable=SC3011
            CHOICE=$(zenity --list \
              --hide-header \
              --hide-column=3 \
              --height=320 \
              --print-column=3 \
              --radiolist \
              --text="Choose font" \
              --width=480 \
              --column="Default" \
              --column="Font" \
              --column="Var" <<<"${FONTS}")

            # shellcheck disable=SC2181
            if [ $? -eq 0 ]; then
              update_progress "+5"
              case "${CHOICE}" in
              ""|"Tahoma")
                wine64 REG DELETE 'HKEY_CURRENT_USER\Software\Wine\Fonts\Replacements' /v 'Tahoma' /f 
                ;;
              *)
                wine64 REG ADD 'HKEY_CURRENT_USER\Software\Wine\Fonts\Replacements' /v 'Tahoma' /d "${CHOICE}" /f 
                ;;
              esac
            fi
      - type: script
        dest-filename: winbox.sh
        commands:
          - |
            #!/bin/sh
            WINEARCH=win64
            export WINEARCH

            if ! [ -e "${WINEPREFIX}/drive_c/Program Files/WinBox/winbox64.exe" ] ; then
              # shellcheck disable=SC3046,SC1091
              source "/app/bin/winbox-installer.sh"
              # shellcheck disable=SC2181
              if [ $? -ne 0 ]; then
                zenity --question \
                  --text="Clean up application directory" \
                  --title="Application installation failed" \
                  --default-cancel

                # shellcheck disable=SC2181
                if [ $? -eq 0 ]; then
                  rm -rf "${WINEPREFIX}"
                fi

                exit 1
              fi
            fi

            wine64 "${WINEPREFIX}/drive_c/Program Files/WinBox/winbox64.exe"
      - type: dir
        path: fonts
      - type: file
        dest-filename: org.flatpak.WinBox.metainfo.xml
        path: WinBox.metainfo.xml
      - type: file
        dest-filename: org.flatpak.WinBox.desktop
        path: WinBox.desktop
      - type: file
        path: icons/default.png
    cleanup:
      - '*.orig'

# vi: set wrap:
